{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./MessageService\";\nexport let MyComponent = /*#__PURE__*/(() => {\n  class MyComponent {\n    messageService;\n    elementRef;\n    renderer;\n    message;\n    constructor(messageService, elementRef, renderer) {\n      this.messageService = messageService;\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      console.log(this.elementRef.nativeElement.querySelector('#SECTION_A2'));\n      this.messageService.connect().subscribe(jsonString => {\n        // Разбираем JSON-строку в объект\n        const data = JSON.parse(jsonString);\n        //console.log(data)\n        data.events.forEach(event => {\n          const sectionElement = this.elementRef.nativeElement.querySelector(`#${event.section}`);\n          if (sectionElement != 0) {\n            console.log(sectionElement);\n            if (event.type == 0) {\n              console.log('1');\n              this.renderer.setStyle(sectionElement, 'fill', 'red');\n            } else if (event.type == 1) {\n              console.log('2');\n              this.renderer.setStyle(sectionElement, 'fill', 'black');\n            } else if (event.type == 2) {\n              console.log('3');\n              this.renderer.setStyle(sectionElement, 'fill', 'blue');\n            } else {\n              console.log('smth go wrong on fill section');\n            }\n          }\n        });\n        // Теперь вы можете использовать объект data для вашей логики\n      });\n    }\n    static ɵfac = function MyComponent_Factory(t) {\n      return new (t || MyComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MyComponent,\n      selectors: [[\"app-my-component\"]],\n      decls: 0,\n      vars: 0,\n      template: function MyComponent_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return MyComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}