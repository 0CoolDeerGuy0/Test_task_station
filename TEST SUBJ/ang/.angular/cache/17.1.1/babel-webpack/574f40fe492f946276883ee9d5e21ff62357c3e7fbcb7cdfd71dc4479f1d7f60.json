{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./MessageService\";\nexport let MyComponent = /*#__PURE__*/(() => {\n  class MyComponent {\n    messageService;\n    elementRef;\n    renderer;\n    message;\n    constructor(messageService, elementRef, renderer) {\n      this.messageService = messageService;\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      function toHex(value) {\n        // Преобразуем числовое значение в двухзначную строку в HEX формате\n        const hex = value.toString(16);\n        return hex.padStart(2, '0');\n      }\n      function generateColor(value) {\n        // Рассчитываем значения RGB компонентов цвета\n        const red = Math.floor(value / 64);\n        const green = Math.floor(value % 64 / 8);\n        const blue = Math.floor(value % 64 % 8);\n        // Объединяем значения компонентов в строку HEX цвета\n        const color = '#' + toHex(red) + toHex(green) + toHex(blue);\n        return color;\n      }\n      this.messageService.connect().subscribe(jsonString => {\n        // Разбираем JSON-строку в объект\n        const data = JSON.parse(jsonString);\n        console.log(data);\n        data.events.forEach(event => {\n          const sectionElement = document.getElementById(event.section);\n          if (sectionElement != null) {\n            if (event.type == 1) {\n              this.renderer.setStyle(sectionElement, 'fill', 'black');\n            } else if (event.type == 2) {\n              //this.renderer.setStyle(sectionElement, 'fill', '')\n            } else if (event.type == 0) {\n              this.renderer.setStyle(sectionElement, 'fill', generateColor(event.trainId));\n            } else {\n              console.log('smth go wrong on fill section');\n            }\n          }\n        });\n        // Теперь вы можете использовать объект data для вашей логики\n      });\n    }\n    static ɵfac = function MyComponent_Factory(t) {\n      return new (t || MyComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MyComponent,\n      selectors: [[\"app-my-component\"]],\n      decls: 0,\n      vars: 0,\n      template: function MyComponent_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return MyComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}